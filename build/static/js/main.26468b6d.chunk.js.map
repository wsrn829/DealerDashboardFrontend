{"version":3,"sources":["../node_modules/express/lib sync","MainPage.js","Nav.js","SalespeopleList.js","SalespeopleForm.js","CustomersList.js","CustomersForm.js","SalesList.js","SalesForm.js","SalesHistory.js","ManufacturerList.js","ManufacturerForm.js","ModelForm.js","ModelList.js","TechnicianForm.js","TechnicianList.js","AppointmentForm.js","AppointmentList.js","ServiceHistory.js","AutoList.js","AutoForm.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","MainPage","React","createElement","className","Nav","NavLink","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","SalespeopleList","salesperson","setSalesperson","useState","useEffect","async","response","fetch","concat","ok","data","json","LoadSalespeople","map","salespersonData","key","employee_id","first_name","last_name","SalespeopleForm","getSalespeople","firstName","setFirstName","lastName","setLastName","employeeId","setEmployeeId","salespeople","setSalespeople","baseUrl","onSubmit","event","preventDefault","salespersonUrl","fetchConfig","method","body","JSON","stringify","headers","newSalesperson","console","log","value","onChange","target","placeholder","required","name","htmlFor","CustomersList","customer","setCustomer","LoadCustomers","customerData","phone_number","address","CustomersForm","_ref","getCustomers","setAddress","phoneNumber","setPhoneNumber","customers","setCustomers","customersUrl","newCustomer","SalesList","sale","setSale","LoadSales","saleData","automobile","vin","price","salesUrl","SalesForm","getSales","setPrice","setAutomobile","automobiles","setAutomobiles","sales","setSales","formSubmitted","setformSubmitted","url","url1","url2","url3","response1","response2","response3","data1","data2","autos","data3","fetchData","soldVinList","newAutomobiles","i","length","push","includes","formClasses","saleUrl","newSale","SalesHistory","salesPerson","setSalesPerson","salesPeople","setSalesPeople","getSalesPeople","selectSales","filter","salesData","ManufacturerList","manufacturer","setManufacturer","manufacturers","LoadManufacturer","manufacturerData","ManufacturerForm","setName","manufacturerURL","ModelForm","picture_url","setPicture_url","manufacturer_id","setmanufacturer_id","setmanufacturers","modelsURL","ModelList","models","setModels","modelUrl","modelData","getModels","Fragment","model","src","alt","TechnicianForm","newTechData","createTechUrl","TechnicianList","technicians","setTechnicians","techUrl","techData","getTechnicians","technician","AppointmentForm","setVin","dateTime","setDateTime","setTechnician","reason","setReason","techniciansUrl","responseData","newAppointmentData","date_time","createAppointmentUrl","AppointmentList","appointments","setAppointments","appointmentsUrl","appt","status","getAppointments","appointment","is_vip","onClick","cancelUrl","apptId","handleCancel","finishUrl","handleFinish","ServiceHistory","filterByVin","AutoList","autoUrl","automobileData","getAutomobiles","auto","color","year","sold","AutoForm","setColor","setYear","setModel","newAutoData","model_id","createAutomobileUrl","cors","require","express","use","App","props","BrowserRouter","Routes","Route","path","element","index","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.26468b6d.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 280;","import React from 'react';\n\nfunction MainPage() {\n  return (\n    <div className=\"px-4 py-5 my-5 text-center\">\n      <h1 className=\"display-5 fw-bold\">CarCar</h1>\n      <div className=\"col-lg-6 mx-auto\">\n        <p className=\"lead mb-4\">\n          The premiere solution for automobile dealership\n          management!\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-success\">\n      <div className=\"container-fluid\">\n        <NavLink className=\"navbar-brand\" to=\"/\">\n          CarCar\n        </NavLink>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/manufacturers\"\n              >\n                Manufacturers\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/manufacturers/create\"\n              >\n                Create a Manufacturer\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/models/create\"\n              >\n                Create a Car Model\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/models\"\n              >\n                Car Models\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/automobiles\"\n              >\n                Automobiles\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/automobiles/create\"\n              >\n                Create an Automobile\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/technicians/create\"\n              >\n                Create a Technician\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/technicians\"\n              >\n                Technician List\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/appointments/create\"\n              >\n                Create a Service Appointment\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/appointments\"\n              >\n                Appointments\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/appointments/history\"\n              >\n                Service History\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/salespeople\"\n              >\n                Salespeople\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/salespeople/create\"\n              >\n                Create a Salesperson\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/customers\"\n              >\n                Customers\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/customers/create\"\n              >\n                Create a Customer\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/sales/\"\n              >\n                Sales\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/sales/create\"\n              >\n                Create a Sale\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                to=\"/sales/history\"\n              >\n                Salesperson History\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React, { useState, useEffect }  from \"react\";\n\n\nfunction SalespeopleList() {\n    const [salesperson, setSalesperson] = useState([]);\n\n    const baseUrl = process.env.NODE_ENV === 'production'\n    ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n    : 'http://localhost:8090/';\n\n    // Postman shows 200 OK\n\n    async function LoadSalespeople() {\n        const response = await fetch(`${baseUrl}salespeople/`);\n        if (response.ok) {\n            const data = await response.json();\n            setSalesperson(data.salesperson)\n        }\n    }\n\n    useEffect(() => {\n        LoadSalespeople();\n    }, []);\n\n    return (\n        <div>\n            <h1>Salespeople</h1>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th>Employee ID</th>\n                        <th>First Name</th>\n                        <th>Last Name</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {salesperson.map((salespersonData) => {\n                        return (\n                            <tr key={salespersonData.id}>\n                                <td>{ salespersonData.employee_id }</td>\n                                <td>{ salespersonData.first_name }</td>\n                                <td>{ salespersonData.last_name }</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default SalespeopleList;\n","import React, { useState } from \"react\";\n\nfunction SalespeopleForm(getSalespeople) {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [employeeId, setEmployeeId] = useState(\"\");\n  const [salesperson, setSalesperson] = useState(\"\");\n  const [salespeople, setSalespeople] = useState(\"\");\n\n  const handleFirstName = (event) => {\n    const value = event.target.value;\n    setFirstName(value);\n  };\n\n  const handleLastName = (event) => {\n    const value = event.target.value;\n    setLastName(value);\n  };\n\n  const handleEmployeeId = (event) => {\n    const value = event.target.value;\n    setEmployeeId(value);\n  };\n\n  const baseUrl = process.env.NODE_ENV === 'production'\n  ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n  : 'http://localhost:8090/';\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = {};\n    data.first_name = firstName;\n    data.last_name = lastName;\n    data.employee_id = employeeId;\n\n    // Postman shows 200 OK\n    const salespersonUrl = `${baseUrl}salespeople/`;\n    const fetchConfig = {\n      method: \"post\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    }\n\n    const response = await fetch(salespersonUrl, fetchConfig);\n    if (response.ok) {\n      const newSalesperson = await response.json();\n      console.log(newSalesperson);\n      setFirstName(\"\");\n      setLastName(\"\");\n      setEmployeeId(\"\");\n      const getSalespeople = async () => {\n        const salespeopleResponse = await fetch(`${baseUrl}salespeople/`);\n\n        if (salespeopleResponse.ok) {\n          const data = await salespeopleResponse.json();\n          const salespeople = data.salesperson;\n          setSalespeople(salesperson);\n        }\n      }\n    }\n  };\n\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"offset-3 col-6\">\n            <div className=\"shadow p-4 mt-4\">\n              <h1>Add a Salesperson</h1>\n              <form onSubmit={handleSubmit} id=\"create-salesperson-form\">\n                <div className=\"form-floating mb-3\">\n                  <input\n                    value={firstName} onChange={handleFirstName} placeholder=\"First name\" required type=\"text\" name=\"first_name\" id=\"first_name\" className=\"form-control\"\n                  />\n                  <label htmlFor=\"first_name\">First name...</label>\n                </div>\n                <div className=\"form-floating mb-3\">\n                  <input\n                    value={lastName} onChange={handleLastName} placeholder=\"Last name\" required type=\"text\" name=\"last_name\" id=\"last_name\" className=\"form-control\"\n                  />\n                  <label htmlFor=\"last_name\">Last name...</label>\n                </div>\n                <div className=\"form-floating mb-3\">\n                  <input\n                    value={employeeId} onChange={handleEmployeeId} placeholder=\"Employee ID\" required type=\"text\" name=\"employee_id\" id=\"employee_id\" className=\"form-control\"\n                  />\n                  <label htmlFor=\"employee_id\">Employee ID...</label>\n                </div>\n                <button className=\"btn btn-primary\">Create</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SalespeopleForm;\n","import React, { useState, useEffect }  from \"react\";\n\nconst baseUrl = process.env.NODE_ENV === 'production'\n    ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n    : 'http://localhost:8090/';\n\nfunction CustomersList() {\n    const [customer, setCustomer] = useState([]);\n    async function LoadCustomers() {\n      // Postman shows 200 OK\n      const response = await fetch(`${baseUrl}customers/`);\n      if (response.ok) {\n          const data = await response.json()\n          setCustomer(data.customer)\n      }\n    }\n\n  useEffect(() => {\n      LoadCustomers();\n  }, []);\n\n  return (\n    <div>\n    <h1>Customers</h1>\n    <table className=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Phone Number</th>\n          <th>Address</th>\n        </tr>\n      </thead>\n      <tbody>\n      {customer.map((customerData) => {\n        return (\n          <tr key={customerData.id}>\n            <td>{ customerData.first_name }</td>\n            <td>{ customerData.last_name }</td>\n            <td>{ customerData.phone_number }</td>\n            <td>{ customerData.address }</td>\n          </tr>\n        );\n      })}\n      </tbody>\n    </table>\n    </div>\n  )\n}\n\nexport default CustomersList;\n","import React, {useState } from 'react'\n\nexport default function CustomersForm({ getCustomers }) {\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [address, setAddress] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [customers, setCustomers] = useState('');\n\n    const handleFirstNameChange = (event) => {\n        const value = event.target.value\n        setFirstName(value)\n    }\n\n    const handleLastNameChange = (event) => {\n        const value = event.target.value\n        setLastName(value)\n    }\n\n    const handleAddressChange = (event) => {\n        const value = event.target.value\n        setAddress(value)\n    }\n\n    const handlePhoneNumberChange = (event) => {\n        const value = event.target.value\n        setPhoneNumber(value)\n    }\n\n    const baseUrl = process.env.NODE_ENV === 'production'\n    ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n    : 'http://localhost:8090/';\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const data = {};\n        data.first_name = firstName;\n        data.last_name = lastName;\n        data.address = address;\n        data.phone_number = phoneNumber;\n\n        const customersUrl = `${baseUrl}customers/`;\n        const fetchConfig = {\n            method: \"post\",\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n        const response = await fetch(customersUrl, fetchConfig);\n        if (response.ok) {\n            const newCustomer = await response.json();\n            console.log(newCustomer);\n            setFirstName('')\n            setLastName('')\n            setAddress('')\n            setPhoneNumber('')\n            const getCustomers = async () => {\n            \n              // Postman shows 200 OK\n              const customerResponse = await fetch(`${baseUrl}customers/`);\n\n              if (customerResponse.ok) {\n                const data = await customerResponse.json();\n                const customers = data.customers;\n                setCustomers(customers);\n              }\n            }\n        }\n    }\n    return (\n        <div className=\"row\">\n            <div className=\"offset-3 col-6\">\n                <div className=\"shadow p-4 mt-4\">\n                    <h1>Add a Customer</h1>\n                    <form onSubmit={handleSubmit} id=\"create-customer-form\">\n                        <div className=\"form-floating mb-3\">\n                            <input onChange={handleFirstNameChange} placeholder=\"First name\" required type=\"text\" name=\"first_name\" id=\"first_name\" className=\"form-control\" value={firstName} />\n                            <label htmlFor=\"first_name\">First name...</label>\n                        </div>\n                        <div className=\"form-floating mb-3\">\n                            <input onChange={handleLastNameChange} placeholder=\"Last name\" required type=\"text\" name=\"last_name\" id=\"last_name\" className=\"form-control\" value={lastName} />\n                            <label htmlFor=\"first_name\">Last name...</label>\n                        </div>\n                        <div className=\"form-floating mb-3\">\n                            <input onChange={handleAddressChange} placeholder=\"Address\" required type=\"text\" name=\"address\" id=\"address\" className=\"form-control\" value={address} />\n                            <label htmlFor=\"address\">Address...</label>\n                        </div>\n                        <div className=\"form-floating mb-3\">\n                            <input onChange={handlePhoneNumberChange} placeholder=\"Phone Number\" required type=\"text\" name=\"phone_number\" id=\"phone_number\" className=\"form-control\" value={phoneNumber} />\n                            <label htmlFor=\"phone_number\">Phone number...</label>\n                        </div>\n                        <button className=\"btn btn-primary\">Create</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n\n\n}\n","import React, { useState, useEffect }  from \"react\";\n\n\nfunction SalesList() {\n    const [sale, setSale] = useState([]);\n\n    const baseUrl = process.env.NODE_ENV === 'production'\n    ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n    : 'http://localhost:8090/';\n\n    // Postman shows 200 OK\n    async function LoadSales() {\n        const response = await fetch(`${baseUrl}sales/`);\n        if (response.ok) {\n            const data = await response.json();\n            setSale(data.sale)\n        }\n    }\n    useEffect(() => {\n        LoadSales();\n    }, []);\n\n\n    return (\n        <div>\n            <h1>Sales</h1>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th>Salesperson Employee ID</th>\n                        <th>Salesperson Name</th>\n                        <th>Customer</th>\n                        <th>VIN</th>\n                        <th>Price</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {sale.map((saleData) => {\n                        return (\n                            <tr key={saleData.id}>\n                                <td>{ saleData.salesperson.employee_id}</td>\n                                <td>{ saleData.salesperson.first_name}</td>\n                                <td>{ saleData.customer.first_name }</td>\n                                <td>{ saleData.automobile.vin}</td>\n                                <td>{ saleData.price }</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default SalesList;\n","import React, {useEffect, useState} from 'react';\n\nconst salesUrl = process.env.NODE_ENV === 'production'\n  ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n  : 'http://localhost:8090/';\n\nconst inventoryUrl = process.env.NODE_ENV === 'production'\n  ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n  : 'http://localhost:8100/';\n\n\nfunction SalesForm({ getSales }) {\n\n    const [price, setPrice] = useState('');\n    const [customer, setCustomer] = useState(\"\");\n    const [customers, setCustomers] = useState([]);\n    const [automobile, setAutomobile] = useState('');\n    const [automobiles, setAutomobiles] = useState([]);\n    const [salesperson, setSalesperson] = useState(\"\");\n    const [salespeople, setSalespeople] = useState([]);\n    const [sales, setSales] = useState([]);\n    const [formSubmitted, setformSubmitted] = useState(false);\n\n\n    const handlePriceChange = (event) => {\n        const value = event.target.value;\n        setPrice(value);\n      }\n\n    const handleCustomerChange = (event) => {\n        const value = event.target.value;\n        setCustomer(value);\n      }\n\n    const handleAutomobileChange = (event) => {\n        const value = event.target.value;\n        setAutomobile(value);\n      }\n\n    const handleSalespersonChange = (event) => {\n        const value = event.target.value;\n        setSalesperson(value);\n      }\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const data = {};\n        data.price = price;\n        data.customer = customer;\n        data.automobile = automobile;\n        data.salesperson = salesperson;\n        console.log(data)\n\n\n        const saleUrl = `${salesUrl}sales/`;\n        const fetchConfig = {\n          method: \"post\",\n          body: JSON.stringify(data),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        };\n\n        const response = await fetch(saleUrl, fetchConfig);\n        if (response.ok) {\n          const newSale = await response.json();\n          console.log(newSale);\n\n          setPrice('');\n          setCustomer('');\n          setAutomobile('');\n          setSalesperson('');\n          setformSubmitted(true);\n        }\n      }\n\n    // Postman show 200 OK\n    const fetchData = async () => {\n    const url = `${salesUrl}salespeople/`;\n    const url1 = `${salesUrl}customers/`;\n    const url2 = `${inventoryUrl}automobiles/`;\n    const url3 = `${salesUrl}sales/`;\n\n    const response = await fetch(url);\n    const response1 = await fetch(url1);\n    const response2 = await fetch(url2);\n    const response3 = await fetch(url3);\n\n    if (response.ok) {\n        const data = await response.json();\n        setSalespeople(data.salesperson)\n    }\n    if (response1.ok) {\n        const data1 = await response1.json();\n        setCustomers(data1.customer)\n      }\n    if (response2.ok) {\n        const data2 = await response2.json();\n        setAutomobiles(data2.autos)\n      }\n      if (response3.ok) {\n        const data3 = await response3.json();\n        setSales(data3.sale)\n      }\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n\n  let soldVinList = []\n  let newAutomobiles = []\n\n\n  for (let i = 0; i < sales.length; i++)\n\n          soldVinList.push(sales[i][\"automobile\"][\"vin\"])\n\n  for (let i = 0; i < automobiles.length; i++)\n\n      if (soldVinList.includes(automobiles[i][\"vin\"]) === false)\n\n          newAutomobiles.push(automobiles[i])\n\n  // let messageClasses = 'alert alert-success d-none mb-0';\n  let formClasses = '';\n\n  if (formSubmitted) {\n    // messageClasses = 'alert alert-success mb-0';\n    formClasses = 'd-none';\n  }\n\n\n    return (\n        <div className=\"row\">\n        <div className=\"offset-3 col-6\">\n          <div className=\"shadow p-4 mt-4\">\n            <h1>Record a new sale</h1>\n            <form className={formClasses} onSubmit={handleSubmit} id=\"create-sale-form\">\n                <div className=\"mb-3\">\n                  Automobile VIN\n                    <select onChange = {handleAutomobileChange} value={automobile} required id=\"automobile\" name=\"automobile\" className=\"form-select\">\n                    <option value=\"\">Choose an automobile VIN...</option>\n                    {newAutomobiles.map(automobile => {\n                        return (\n                        <option key={automobile.id} value={automobile.vin}>\n                        {automobile.vin}\n                        </option>\n                        );\n                        })}\n                    </select>\n                </div>\n\n                <div className=\"mb-3\">\n                  Salesperson\n                    <select onChange = {handleSalespersonChange} value={salesperson} required id=\"salesperson\" name=\"salesperson\" className=\"form-select\">\n                    <option value=\"\">Choose a salesperson...</option>\n                    {salespeople.map(salesperson => {\n                        return (\n                        <option key={salesperson.id} value={salesperson.id}>\n                        {salesperson.first_name}\n                        </option>\n                        );\n                        })}\n                    </select>\n                </div>\n\n                <div className=\"mb-3\">\n                  Customer\n                    <select onChange = {handleCustomerChange} value={customer} required id=\"customer\" name=\"customer\" className=\"form-select\">\n                    <option value=\"\">Choose a customer...</option>\n                    {customers.map(customer => {\n                        return (\n                        <option key={customer.id} value={customer.id}>\n                        {customer.first_name}\n                        </option>\n                        );\n                        })}\n                    </select>\n                </div>\n\n                <div className=\"form-floating mb-3\">\n                Price\n                <input onChange = {handlePriceChange} value={price} placeholder=\"price\" required type=\"number\" name=\"price\" id=\"price\" className=\"form-control\"/>\n                <label htmlFor=\"Price\"></label>\n              </div>\n\n              <button className=\"btn btn-primary\">Create</button>\n            </form>\n              {/* <div className={messageClasses} id=\"success-message\">\n                  Congratulations!\n                </div> */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\nexport default SalesForm;\n","import React, { useState, useEffect } from \"react\";\n\nexport default function SalesHistory() {\n  const [sales, setSales] = useState([]);\n  const [salesPerson, setSalesPerson] = useState(\"\");\n  const [salesPeople, setSalesPeople] = useState([]);\n\n  const handleSalesPerson = (event) => {\n    const value = event.target.value;\n    setSalesPerson(value);\n\n\n    const selectSales = sales.filter(\n      (sale) => sale.salesperson.first_name === value);\n    setSales(selectSales);\n  };\n\n  const data = {\n    salesPerson: salesPerson,\n  };\n\n  // Postman shows 200 OK\n  const baseUrl = process.env.NODE_ENV === 'production'\n  ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n  : 'http://localhost:8090/';\n\n  async function LoadSales() {\n    const response = await fetch(`${baseUrl}sales/`);\n    if (response.ok) {\n      const data = await response.json();\n      setSales(data.sale);\n    }\n  }\n\n  async function getSalesPeople() {\n    const url = `${baseUrl}salespeople/`;\n    const response = await fetch(url);\n    if (response.ok) {\n      const data = await response.json();\n      setSalesPeople(data.salesperson);\n    }\n  }\n\n  useEffect(() => {\n    LoadSales();\n    getSalesPeople();\n  }, []);\n\n  return (\n    <div>\n      <h1>Salesperson History</h1>\n      <div className=\"form-floating mb-3\">\n        <select\n          value={salesPerson}\n          onChange={handleSalesPerson}\n          placeholder=\"salesPerson\"\n          required\n          type=\"text\"\n          name=\"salesPerson\"\n          id=\"salesPerson\"\n          className=\"form-select\"\n        >\n          <option value=\"\">Choose a salesperson</option>\n          {salesPeople.map((salesperson) => {\n            return (\n              <option key={salesperson.id} value={salesperson.first_name}>\n                {salesperson.first_name}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Salesperson</th>\n            <th>Customer</th>\n            <th>VIN</th>\n            <th>Price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sales.map((salesData) => {\n            return (\n              <tr key={salesData.id}>\n                <td>{salesData.salesperson.first_name}</td>\n                <td>{salesData.customer.first_name}</td>\n                <td>{salesData.automobile.vin}</td>\n                <td>{salesData.price}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { useState, useEffect }  from \"react\";\n\n\nexport default function ManufacturerList() {\n    const [manufacturer, setManufacturer] = useState([]);\n\n    const baseUrl = process.env.NODE_ENV === 'production'\n    ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n    : 'http://localhost:8100/';\n\n    async function LoadManufacturer() {\n        // Postman shows 200 OK\n        const response = await fetch(`${baseUrl}manufacturers/`);\n        if (response.ok) {\n          const data = await response.json();\n          setManufacturer(data.manufacturers);\n        }\n      }\n\n    useEffect(() => {\n        LoadManufacturer();\n    }, []);\n\n\n    return (\n        <div>\n            <h1>Manufacturers</h1>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {manufacturer.map((manufacturerData) => {\n                        return (\n                            <tr key={manufacturerData.id}>\n                                <td>{ manufacturerData.name }</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\n\nexport default function ManufacturerForm() {\n  const [name, setName] = useState(\"\");\n\n  const handleName = (event) => {\n    const value = event.target.value;\n    setName(value);\n  };\n\n  const data = {\n    name: name,\n\n  };\n\n  const baseUrl = process.env.NODE_ENV === 'production'\n    ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n    : 'http://localhost:8100/';\n\n  // Postman shows 200 OK\n  const manufacturerURL = `${baseUrl}manufacturers/`;\n  const fetchConfig = {\n    method: \"post\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const response = await fetch(manufacturerURL, fetchConfig);\n    if (response.ok) {\n      // const newManufacturer = await response.json();\n      setName(\"\");\n    }\n  };\n\n\n\n  return (\n    <div>\n      <div className=\"my-5 container\">\n        <div className=\"row\">\n          <div className=\"offset-3 col-6\">\n            <div className=\"shadow p-4 mt-4\">\n              <h1>Create a manufacturer</h1>\n              <form onSubmit={handleSubmit} id=\"create-salesperson-form\">\n                <div className=\"form-floating mb-3\">\n                  <input\n                    value={name} onChange={handleName} placeholder=\"Name\" required type=\"text\" name=\"name\" id=\"name\" className=\"form-control\"\n                  />\n                  <label htmlFor=\"name\">Manufacturer Name</label>\n                </div>\n                <button className=\"btn btn-primary\">Create</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nexport default function ModelForm() {\n  const [name, setName] = useState(\"\");\n  const [picture_url, setPicture_url] = useState(\"\");\n  const [manufacturer_id, setmanufacturer_id] = useState(\"\");\n  const [manufacturers, setmanufacturers] = useState([]);\n\n  const handleName = (event) => {\n    const value = event.target.value;\n    setName(value);\n  };\n\n  const  handlepicture_url= (event) => {\n    const value = event.target.value;\n    setPicture_url(value);\n  };\n\n  const handlemanufacturer_id = (event) => {\n    const value = event.target.value;\n    setmanufacturer_id(value);\n  };\n\n  const baseUrl = process.env.NODE_ENV === 'production'\n    ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n    : 'http://localhost:8100/';\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const data = {\n    name:name,\n    picture_url: picture_url,\n    manufacturer_id:manufacturer_id\n    }\n\n    // Postman shows 200 OK\n    const modelsURL = `${baseUrl}models/`;\n    const fetchConfig = {\n      method: \"post\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const response = await fetch(modelsURL, fetchConfig);\n    if (response.ok) {\n    //   const newModel = await response.json();\n\n      setName(\"\");\n      setPicture_url(\"\");\n      setmanufacturer_id(\"\");\n\n    }\n  };\n\n  const fetchData = async () => {\n    const url = `${baseUrl}manufacturers/`;\n    const response = await fetch(url);\n    if (response.ok) {\n      const data = await response.json();\n      setmanufacturers(data.manufacturers);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n\n  return (\n    <div>\n      <div className=\"my-5 container\">\n        <div className=\"row\">\n          <div className=\"offset-3 col-6\">\n            <div className=\"shadow p-4 mt-4\">\n              <h1>Create a vehicle model</h1>\n              <form onSubmit={handleSubmit} id=\"create-model-form\">\n                <div className=\"form-floating mb-3\">\n                  <input\n                    value={name} onChange={handleName} placeholder=\"name\" required type=\"text\" name=\"name\" id=\"name\" className=\"form-control\"\n                  />\n                  <label htmlFor=\"model_name\">Model Name</label>\n                </div>\n                <div className=\"form-floating mb-3\">\n                  <input\n                    value={picture_url} onChange={handlepicture_url} placeholder=\"picture_url\" required type=\"text\" name=\"picture_url\" id=\"picture_url\" className=\"form-control\"/>\n                  <label htmlFor=\"picture\">Picture URL</label>\n                </div>\n                <div className=\"form-floating mb-3\">\n                  <select\n                    value={manufacturer_id} onChange={handlemanufacturer_id} placeholder=\"manufacturer_id\" required type=\"text\" name=\"manufacturer_id\" id=\"manufacturer_id\" className=\"form-select\">\n                  <option value=\"\">Choose a manufacturer_id</option>\n                  {manufacturers.map((manufacturer_id) => {\n                    return(\n                        <option key={manufacturer_id.id} value={manufacturer_id.id}>\n                            {manufacturer_id.name}\n                            </option>\n                    );\n                })}\n                  </select>\n                </div>\n                <button className=\"btn btn-primary\">Create</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nexport const ModelList = () => {\n  const [models, setModels] = useState([]);\n\n  const baseUrl = process.env.NODE_ENV === 'production'\n    ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n    : 'http://localhost:8100/';\n\n  useEffect(() => {\n    const getModels = async () => {\n      //Postman shows 200 OK\n      const modelUrl = `${baseUrl}models/`;\n      const response = await fetch(modelUrl);\n\n      if (response.ok) {\n        const modelData = await response.json();\n        setModels(modelData.models);\n      }\n    };\n    getModels();\n  }, []);\n  return (\n    <>\n      <h1>Models</h1>\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Manufacturer</th>\n            <th>Picture</th>\n          </tr>\n        </thead>\n        <tbody>\n          {models.map((model) => {\n            return (\n              <tr key={model.id}>\n                <td>{model.name}</td>\n                <td>{model.manufacturer.name}</td>\n                <td>\n                  <img src={model.picture_url} alt=\"Car\" />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\n\nexport const TechnicianForm = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [employeeId, setEmployeeId] = useState(\"\");\n\n  const baseUrl = process.env.NODE_ENV === 'production'\n  ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n  : 'http://localhost:8000/';\n\n  //   Handle change within input\n  const changeFirstName = (e) => {\n    setFirstName(e.target.value);\n  };\n\n  const changeLastName = (e) => {\n    setLastName(e.target.value);\n  };\n\n  const changeEmployeeId = (e) => {\n    setEmployeeId(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const newTechData = {\n        employee_id: employeeId,\n        first_name: firstName,\n        last_name: lastName,\n    };\n\n    // Postman shows 200 OK\n    const createTechUrl = `${baseUrl}technicians/`;\n    const fetchConfig = {\n      method: \"post\",\n      body: JSON.stringify(newTechData),\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n\n    const response = await fetch(createTechUrl, fetchConfig);\n\n    if (response.ok) {\n      // alert(\"Created a new technician\");\n    } else {\n      // alert(\"Failed to create a new technician\");\n    }\n\n    // Reset form\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmployeeId(\"\");\n  };\n\n  return (\n    <>\n    <div className=\"row\">\n    <div className=\"offset-3 col-6\">\n      <div className=\"shadow p-4 mt-4\">\n        <h1>Add a Technician</h1>\n        <form onSubmit={handleSubmit} id=\"create-technician-form\">\n          <div className=\"form-floating mb-3\">\n             <input\n             onChange={changeEmployeeId}\n             placeholder=\"Employee ID\"\n             required value ={employeeId}\n             type=\"text\" name=\"employee_id\" id=\"employee_id\" className=\"form-control\"/>\n             <label htmlFor=\"employee_id\">Employee ID</label>\n          </div>\n          <div className=\"form-floating mb-3\">\n            <input\n            onChange={changeFirstName}\n            placeholder=\"First name\"\n            required value ={firstName}\n            type=\"text\" name=\"first_name\" id=\"first_name\" className=\"form-control\"/>\n            <label htmlFor=\"first_name\">First Name</label>\n          </div>\n          <div className=\"form-floating mb-3\">\n            <input\n            onChange={changeLastName}\n            placeholder=\"Last name\"\n            required value ={lastName}\n            type=\"text\" name=\"last_name\" id=\"last_name\" className=\"form-control\"/>\n            <label htmlFor=\"last_name\">Last name</label>\n          </div>\n          <button className=\"btn btn-primary\">Create</button>\n        </form>\n      </div>\n    </div>\n  </div>\n  </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nexport const TechnicianList = () => {\n  const [technicians, setTechnicians] = useState([]);\n\n  const baseUrl = process.env.NODE_ENV === 'production'\n  ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n  : 'http://localhost:8080/';\n\n  // Postman shows 200 OK\n  useEffect(() => {\n    const getTechnicians = async () => {\n      const techUrl = `${baseUrl}technicians/`;\n      const response = await fetch(techUrl);\n\n      if (response.ok) {\n        const techData = await response.json();\n        setTechnicians(techData.technicians);\n      }\n    };\n    getTechnicians();\n  }, []);\n\n  return (\n    <>\n      <h1>Technicians</h1>\n      <table className=\"table table-striped table-hover\">\n        <thead>\n          <tr>\n            <th>Employee ID</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          {technicians.map((technician) => (\n            <tr key={technician.employee_id}>\n              <td>{technician.employee_id}</td>\n              <td>{technician.first_name}</td>\n              <td>{technician.last_name}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\nexport const AppointmentForm = () => {\n  // Declaring our state\n  const [vin, setVin] = useState(\"\");\n  const [customer, setCustomer] = useState(\"\");\n  const [dateTime, setDateTime] = useState(\"\");\n  const [technician, setTechnician] = useState(\"\");\n  const [technicians, setTechnicians] = useState([]);\n  const [reason, setReason] = useState([]);\n\n  const baseUrl = process.env.NODE_ENV === 'production'\n  ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n  : 'http://localhost:8000/';\n\n  // Getting data from technicians list (Postman shows 200 OK)\n  useEffect(() => {\n    async function getTechnicians() {\n      const techniciansUrl = `${baseUrl}technicians/`;\n      const response = await fetch(techniciansUrl);\n      if (response.ok) {\n        const responseData = await response.json();\n        setTechnicians(responseData.technicians);\n      }\n    }\n    getTechnicians();\n  }, []);\n\n  //   Handling state change\n  const changeVin = (e) => {\n    setVin(e.target.value);\n  };\n\n  const changeCustomer = (e) => {\n    setCustomer(e.target.value);\n  };\n\n  const changeDateTime = (e) => {\n    setDateTime(e.target.value);\n  };\n\n  const changeTechnician = (e) => {\n    setTechnician(e.target.value);\n  };\n\n  const changeReason = (e) => {\n    setReason(e.target.value);\n  };\n\n  //   Submitting form\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const newAppointmentData = {\n      date_time: dateTime,\n      reason,\n      vin,\n      customer,\n      technician,\n    };\n\n    const createAppointmentUrl = `${baseUrl}appointments/`;\n    const fetchConfig = {\n      method: \"post\",\n      body: JSON.stringify(newAppointmentData),\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const response = await fetch(createAppointmentUrl, fetchConfig);\n    // if (response.ok) {\n    //   alert(\"New Appointment has been reated.\");\n    // } else {\n    //   alert(\"Car is already scheduled\");\n    // }\n\n    setVin(\"\");\n    setCustomer(\"\");\n    setDateTime(\"\");\n    setTechnician(\"\");\n    setReason(\"\");\n  };\n\n  return (\n            <>\n        <div className=\"row\">\n        <div className=\"offset-3 col-6\">\n          <div className=\"shadow p-4 mt-4\">\n            <h1>Create an appointment</h1>\n            <form onSubmit={handleSubmit} id=\"create-appointment-form\">\n              <div className=\"form-floating mb-3\">\n                <input\n                onChange={changeVin}\n                placeholder=\"VIN\"\n                required value ={vin}\n                type=\"text\" name=\"vin\" id=\"vin\" className=\"form-control\"/>\n                <label htmlFor=\"vin\">VIN</label>\n              </div>\n              <div className=\"form-floating mb-3\">\n                <input\n                onChange={changeCustomer}\n                placeholder=\"Customer\"\n                required value ={customer}\n                type=\"text\" name=\"customer\" id=\"customer\" className=\"form-control\"/>\n                <label htmlFor=\"customer\">Customer</label>\n              </div>\n              <div className=\"form-floating mb-3\">\n                <input\n                onChange={changeDateTime}\n                placeholder=\"Date & Time\"\n                required value ={dateTime}\n                type=\"datetime-local\" name=\"dateTime\" id=\"dateTime\" className=\"form-control\"/>\n                <label htmlFor=\"dateTime\">Date & Time</label>\n              </div>\n              <div className=\"mb-3\">\n                <select\n                  onChange={changeTechnician}\n                  required\n                  value={technician}\n                  name=\"technician\"\n                  id=\"technician\"\n                  className=\"form-select\">\n                  <option value=\"\">Choose a technician</option>\n                  {technicians.map(technician=>{\n                    return (\n                        <option key={technician.employee_id} value={technician.employee_id}>\n                          {technician.first_name} {technician.last_name}\n                        </option>\n                    )\n                  })}\n                </select>\n              </div>\n              <div className=\"form-floating mb-3\">\n                <input\n                onChange={changeReason}\n                placeholder=\"Reason\"\n                required value ={reason}\n                type=\"text\" name=\"reason\" id=\"reason\" className=\"form-control\"/>\n                <label htmlFor=\"reason\">Reason</label>\n              </div>\n              <button className=\"btn btn-primary\">Create</button>\n            </form>\n          </div>\n        </div>\n        </div>\n        </>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\n\nexport const AppointmentList = () => {\n  const [appointments, setAppointments] = useState([]);\n\n  const baseUrl = process.env.NODE_ENV === 'production'\n  ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n  : 'http://localhost:8000/';\n\n\n  // Postman shows 200 OK\n  useEffect(() => {\n    async function getAppointments() {\n      const appointmentsUrl = `${baseUrl}appointments/`;\n      const response = await fetch(appointmentsUrl);\n      if (response.ok) {\n        const responseData = await response.json();\n        const appointments = responseData.appointments;\n        setAppointments(\n          appointments.filter((appt) => appt.status === \"created\")\n        );\n      }\n    }\n    getAppointments();\n  }, [appointments]);\n\n  const handleCancel = async (apptId) => {\n    const cancelUrl = `${baseUrl}appointments/${apptId}/cancel/`;\n\n    const fetchConfig = {\n      method: \"put\",\n    };\n\n    const response = await fetch(cancelUrl, fetchConfig);\n    // if (response.ok) {\n    //   alert(\"Appointment Updated!\");\n    //   setAppointments(appointments.filter((appt) => appt.status === \"created\"));\n    // }\n  };\n\n  const handleFinish = async (apptId) => {\n    const finishUrl = `${baseUrl}appointments/appointments/${apptId}/finish/`;\n\n    const fetchConfig = {\n      method: \"put\",\n    };\n\n    const response = await fetch(finishUrl, fetchConfig);\n    // if (response.ok) {\n    //   alert(\"Appointment Updated!\");\n    //   setAppointments(appointments.filter((appt) => appt.status === \"created\"));\n    // }\n  };\n\n  return (\n    <>\n      <h1>Appointments</h1>\n      <p>\n        NOTE: If your appointment is canceled or finished, it will NOT show up\n        on this list\n      </p>\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>VIN</th>\n            <th>Is VIP?</th>\n            <th>Customer</th>\n            <th>Date + time</th>\n            <th>Technician</th>\n            <th>Reason</th>\n          </tr>\n        </thead>\n        <tbody>\n          {appointments.map((appointment) => {\n            return (\n              <tr key={appointment.id}>\n                <td>{appointment.vin}</td>\n                <td>{appointment.is_vip ? \"Yes\" : \"No\"}</td>\n                <td>{appointment.customer}</td>\n                <td>{appointment.date_time}</td>\n                <td>{appointment.technician.first_name}</td>\n                <td>{appointment.reason}</td>\n                <td>\n                  <button\n                    className=\"btn btn-danger\"\n                    onClick={() => handleCancel(appointment.id)}\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    className=\"btn btn-success\"\n                    onClick={() => handleFinish(appointment.id)}\n                  >\n                    Finish\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\n\nexport const ServiceHistory = () => {\n  const [vin, setVin] = useState(\"\");\n  const [appointments, setAppointments] = useState([]);\n\n  const baseUrl = process.env.NODE_ENV === 'production'\n  ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n  : 'http://localhost:8080/';\n\n  // Postman shows 200 OK\n  useEffect(() => {\n    async function getAppointments() {\n      const appointmentsUrl = `${baseUrl}appointments/`;\n      const response = await fetch(appointmentsUrl);\n      if (response.ok) {\n        const responseData = await response.json();\n        setAppointments(responseData.appointments);\n      }\n    }\n    getAppointments();\n  }, []);\n\n  const changeVin = (e) => {\n    setVin(e.target.value);\n  };\n\n  const filterByVin = () => {\n    // if (vin === \"\") {\n    //   alert(\"Please enter a VIN\");\n    // }\n    setAppointments(\n      appointments.filter((appt) => {\n        return appt.vin === vin;\n      })\n    );\n  };\n  return (\n    <>\n      <div>\n        <h1>Service History</h1>\n        <input\n          type=\"text\"\n          value={vin}\n          placeholder=\"Search by VIN\"\n          onChange={changeVin}\n        />\n        <button className=\"btn btn-outline-secondary\" onClick={filterByVin}>\n          Search\n        </button>\n      </div>\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>VIN</th>\n            <th>Is VIP?</th>\n            <th>Customer</th>\n            <th>Date + Time</th>\n            <th>Technician</th>\n            <th>Reason</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {appointments.map((appt) => (\n            <tr key={appt.id}>\n              <td>{appt.vin}</td>\n              <td>{appt.is_vip ? \"Yes\" : \"No\"}</td>\n              <td>{appt.customer}</td>\n              <td>{appt.date_time}</td>\n              <td>{appt.technician.first_name}</td>\n              <td>{appt.reason}</td>\n              <td>{appt.status}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\nexport const AutoList = () => {\n  const [automobiles, setAutomobiles] = useState([]);\n\n  const baseUrl = process.env.NODE_ENV === 'production'\n  ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n  : 'http://localhost:8100/';\n\n  //   Fetch automobile data (Postman shows 200 OK)\n\n  useEffect(() => {\n    const getAutomobiles = async () => {\n      const autoUrl = `${baseUrl}automobiles/`;\n      const response = await fetch(autoUrl);\n\n      if (response.ok) {\n        const automobileData = await response.json();\n        setAutomobiles(automobileData.autos);\n      }\n    };\n    getAutomobiles();\n  }, []);\n  return (\n    <>\n      <h1>Automobiles</h1>\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>VIN</th>\n            <th>Color</th>\n            <th>Year</th>\n            <th>Model</th>\n            <th>Manufacturer</th>\n            <th>Sold</th>\n          </tr>\n        </thead>\n        <tbody>\n          {automobiles.map((auto) => {\n            return (\n              <tr key={auto.id}>\n                <td>{auto.vin}</td>\n                <td>{auto.color}</td>\n                <td>{auto.year}</td>\n                <td>{auto.model.name}</td>\n                <td>{auto.model.manufacturer.name}</td>\n                <td>{auto.sold ? \"Yes\" : \"No\"}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\n\nexport const AutoForm = () => {\n  const [color, setColor] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [vin, setVin] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [models, setModels] = useState([]);\n\n  const baseUrl = process.env.NODE_ENV === 'production'\n  ? 'https://dealer-dashboard-8d7b3aea3ae7.herokuapp.com/'\n  : 'http://localhost:8100/';\n\n  //   Fetch model data (Postman shows 200 OK)\n  useEffect(() => {\n    const getModels = async () => {\n      const modelUrl = `${baseUrl}models/`;\n      const response = await fetch(modelUrl);\n\n      if (response.ok) {\n        const modelData = await response.json();\n        setModels(modelData.models);\n      }\n    };\n    getModels();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const newAutoData = { color, year, vin, model_id: model };\n\n    // Postman shows 200 OK\n    const createAutomobileUrl = `${baseUrl}automobiles/`;\n    const fetchConfig = {\n      method: \"post\",\n      body: JSON.stringify(newAutoData),\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const response = await fetch(createAutomobileUrl, fetchConfig);\n    // if (response.ok) {\n    //   alert(\"New Automobile Created!\");\n    // } else {\n    //   alert(\"Invalid  Car: Possible already in inventory\");\n    // }\n\n    setColor(\"\");\n    setYear(\"\");\n    setModel(\"\");\n    setVin(\"\");\n  };\n  return (\n      <>\n        <div className=\"row\">\n          <div className=\"offset-3 col-6\">\n            <div className=\"shadow p-4 mt-4\">\n              <h1>Add an automobile to inventory</h1>\n              <form onSubmit={handleSubmit} id=\"add-automobile-form\">\n                <div className=\"form-floating mb-3\">\n                  <input\n                  onChange={(e) => setColor(e.target.value)}\n                  placeholder=\"Color\"\n                  required value ={color}\n                  type=\"text\" name=\"color\" id=\"color\" className=\"form-control\"/>\n                  <label htmlFor=\"color\">Color</label>\n                </div>\n                <div className=\"form-floating mb-3\">\n                  <input\n                  onChange={(e) => setYear(e.target.value)}\n                  placeholder=\"Year\"\n                  required value ={year}\n                  type=\"text\" name=\"year\" id=\"year\" className=\"form-control\"/>\n                  <label htmlFor=\"year\">Year</label>\n                </div>\n                <div className=\"form-floating mb-3\">\n                  <input\n                  onChange={(e) => setVin(e.target.value)}\n                  placeholder=\"VIN\"\n                  required value ={vin}\n                  type=\"text\" name=\"vin\" id=\"vin\" className=\"form-control\"/>\n                  <label htmlFor=\"vin\">VIN</label>\n                </div>\n                <div className=\" mb-3\">\n                  <select\n                    onChange={(e) => setModel(e.target.value)}\n                    required\n                    value={model}\n                    name=\"model\"\n                    id=\"model\"\n                    className=\"form-select\">\n                    <option value=\"\">Choose a model</option>\n                    {models?.map(model=>{\n                      return (\n                        <option key={model.id} value={model.id}>\n                          {model.name}\n                        </option>\n                      )\n                    })}\n                  </select>\n                </div>\n                <button className=\"btn btn-primary\">Create</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n}\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport MainPage from \"./MainPage\";\nimport Nav from \"./Nav\";\nimport SalespeopleList from \"./SalespeopleList\";\nimport SalespeopleForm from \"./SalespeopleForm\";\nimport CustomersList from \"./CustomersList\";\nimport CustomersForm from \"./CustomersForm\";\nimport SalesList from \"./SalesList\";\nimport SalesForm from \"./SalesForm\";\nimport SalesHistory from \"./SalesHistory\";\nimport ManufacturerList from \"./ManufacturerList\";\nimport ManufacturerForm from \"./ManufacturerForm\";\nimport ModelForm from \"./ModelForm\";\nimport { ModelList } from \"./ModelList\";\nimport { TechnicianForm } from \"./TechnicianForm\";\nimport { TechnicianList } from \"./TechnicianList\";\nimport { AppointmentForm } from \"./AppointmentForm\";\nimport { AppointmentList } from \"./AppointmentList\";\nimport { ServiceHistory } from \"./ServiceHistory\";\nimport { AutoList } from \"./AutoList\";\nimport { AutoForm } from \"./AutoForm\";\n\n\nconst cors = require(\"cors\");\nconst express = require(\"express\");\nconst app = express();\n\napp.use(cors());\n\n// const cors = require(\"cors\");\n// App.use(cors());\n\nfunction App(props) {\n  return (\n    <BrowserRouter>\n      <Nav />\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<MainPage />} />\n          <Route path=\"automobiles\">\n            <Route index element={<AutoList />}></Route>\n            <Route path=\"create\" element={<AutoForm />}></Route>\n          </Route>\n          <Route path=\"technicians\">\n            <Route index element={<TechnicianList />} />\n            <Route path=\"create\" element={<TechnicianForm />} />\n          </Route>\n          <Route path=\"appointments\">\n            <Route index element={<AppointmentList />} />\n            <Route path=\"create\" element={<AppointmentForm />} />\n            <Route path=\"history\" element={<ServiceHistory />} />\n          </Route>\n          <Route path=\"salespeople/\" element={<SalespeopleList />} />\n          <Route path=\"salespeople/create\" element={<SalespeopleForm />} />\n          <Route path=\"customers/\" element={<CustomersList />} />\n          <Route path=\"customers/create\" element={<CustomersForm />} />\n          <Route path=\"manufacturers/\" element={<ManufacturerList />} />\n          <Route path=\"manufacturers/create\" element={<ManufacturerForm />} />\n          <Route path=\"models/create\" element={<ModelForm />} />\n          <Route path=\"models\" element={<ModelList />} />\n          <Route path=\"sales/\" element={<SalesList />} />\n          <Route path=\"sales/create\" element={<SalesForm />} />\n          <Route path=\"sales/history\" element={<SalesHistory />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}